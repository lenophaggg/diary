@model diary.ViewModels.ManageAttendanceViewModel

@{
    ViewData["Title"] = "Управление посещаемостью";

    bool isGroupHead = User.IsInRole("GroupHead");
    bool isAdmin = User.IsInRole("Admin");
}

<div class="text-center py-4">
    <h2>Посещаемость группы <span class="text-primary">@Model.GroupNumber</span> по предмету "@Model.SubjectName" (<span class="lesson-type" data-lesson-type="@Model.SubjectType"></span>)</h2>
</div>

@if (isAdmin)
{
    <div class="text-right mb-3">
        <button type="button" class="btn btn-success" id="exportToExcel" data-export-url="@Url.Action("ExportToExcel", "Shared", new { classId = Model.ClassId })">
            <i class="fas fa-file-excel"></i> Экспорт в Excel
        </button>
    </div>
}

<form id="attendanceForm">
    <input type="hidden" name="ClassId" value="@Model.ClassId" />

    <div class="table-responsive" style="overflow-x: auto; white-space: nowrap;">
        <table class="table table-bordered" id="attendanceTable" style="table-layout: fixed; width: auto;">
            <thead>
                <tr>
                    <th style="max-width: 400px; text-align: center; white-space: normal;">ФИО студента</th>
                    @{
                        var uniqueDatesSessions = Model.AttendanceRecords
                        .GroupBy(a => new { a.Date, a.SessionNumber })
                        .OrderBy(g => g.Key.Date)
                        .ThenBy(g => g.Key.SessionNumber)
                        .ToList();
                    }

                    @foreach (var group in uniqueDatesSessions)
                    {
                        <th class="align-middle" style="min-width: 150px; max-width: 250px; text-align: center;"
                            data-date="@group.Key.Date.ToString("yyyy-MM-dd")"
                            data-session="@group.Key.SessionNumber">
                            <div class="d-flex flex-column justify-content-center h-100">
                                <div class="session-header text-center">
                                    <div>@group.Key.Date.ToShortDateString() / @group.Key.SessionNumber</div>
                                    @if (isAdmin)
                                    {
                                        <div class="d-flex justify-content-center mt-2">
                                            <button type="button" class="btn btn-sm btn-danger delete-attendance-column"
                                                    style="width: 30px; height: 30px; margin-right: 10px;"
                                                    data-date="@group.Key.Date.ToString("yyyy-MM-dd")"
                                                    data-session="@group.Key.SessionNumber">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-secondary save-attendance"
                                                    data-date="@group.Key.Date.ToString("yyyy-MM-dd")"
                                                    data-session="@group.Key.SessionNumber">
                                                Сохранить
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </th>
                    }

                    @if (isGroupHead)
                    {
                        <th style="min-width: 150px; max-width: 200px; text-align: center;" id="newColumnHeader">
                            <div class="d-flex flex-column justify-content-center h-100">
                                <div class="session-header">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <input type="date" id="newDateInput" class="form-control" style="max-width: 70%;" placeholder="Выберите дату" />
                                        <button type="button" id="addColumnButton" class="btn btn-outline-secondary" style="max-width: 30%;">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </th>
                    }

                    <th style="max-width: 150px; text-align: center;">Посещаемость</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model.Students)
                {
                    <tr>
                        <td style="max-width: 400px; text-align: center; white-space: normal;" data-student-id="@student.StudentId">@student.Name</td>
                        @{
                            int confirmedCount = 0;
                            int excusedAbsenceCount = 0;
                        }
                        @foreach (var group in uniqueDatesSessions)
                        {
                            var attendanceRecord = Model.AttendanceRecords
                            .FirstOrDefault(a => a.StudentId == student.StudentId && a.Date == group.Key.Date && a.SessionNumber == group.Key.SessionNumber);

                            <td style="min-width: 150px; max-width: 250px; text-align: center;">
                                @if (attendanceRecord != null && attendanceRecord.IsExcusedAbsence)
                                {
                                    <input type="checkbox"
                                           class="attendance-checkbox form-check-input excused-absence"
                                           data-student-id="@student.StudentId"
                                           data-date="@group.Key.Date.ToString("yyyy-MM-dd")"
                                           data-session-number="@group.Key.SessionNumber"
                                           disabled />
                                }
                                else
                                {
                                    <input type="checkbox"
                                           class="attendance-checkbox form-check-input"
                                           data-student-id="@student.StudentId"
                                           data-date="@group.Key.Date.ToString("yyyy-MM-dd")"
                                           data-session-number="@group.Key.SessionNumber"
                                    @(attendanceRecord != null && attendanceRecord.IsPresent ? "checked" : "")
                                    @(isAdmin ? "" : "disabled") />
                                }
                            </td>

                            if (attendanceRecord != null)
                            {
                                if (attendanceRecord.IsPresent)
                                {
                                    confirmedCount++;
                                }
                                if (attendanceRecord.IsExcusedAbsence)
                                {
                                    excusedAbsenceCount++;
                                }
                            }
                        }

                        @if (isGroupHead)
                        {
                            <td style="min-width: 150px; max-width: 200px; text-align: center;">
                                <input type="checkbox"
                                       class="attendance-checkbox form-check-input"
                                       data-student-id="@student.StudentId"
                                       disabled />
                            </td>
                        }

                        @{
                            int totalClasses = Model.TotalClasses - excusedAbsenceCount;
                            int totalAttended = confirmedCount;
                            double attendancePercentage = (totalClasses > 0) ? (double)totalAttended / totalClasses * 100 : 0;
                            string cellStyle = "background-color: #f8d7da;";

                            if (attendancePercentage >= 90)
                            {
                                cellStyle = "background-color: #d4edda;";
                            }
                            else if (attendancePercentage >= 80)
                            {
                                cellStyle = "background-color: #fff3cd;";
                            }
                            else if (attendancePercentage >= 50)
                            {
                                cellStyle = "background-color: #e2e3e5;";
                            }
                        }

                        <td class="text-center" style="max-width: 150px; @cellStyle">
                            @totalAttended / @totalClasses (-@excusedAbsenceCount)
                            (@Math.Round(attendancePercentage, 1) %)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>

@section scripts {
    <script src="~/js/ManageAttendance.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var exportButton = document.getElementById("exportToExcel");
            if (exportButton) {
                exportButton.addEventListener("click", function (event) {
                    event.preventDefault();
                    window.location.href = exportButton.getAttribute('data-export-url');
                });
            }
        });
    </script>
}
