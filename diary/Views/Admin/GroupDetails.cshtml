@model diary.ViewModels.GroupDetailsViewModel

@{
    ViewData["Title"] = "Group Details";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="container mt-5">
    <div class="row">
        <div class="col-12 text-center">
            <h1 id="groupNumber" class="display-4">Группа <span class="text-primary">@Model.GroupNumber</span></h1>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            @if (Model.GroupHead != null)
            {
                <div class="card mb-4">
                    <div class="card-header bg-primary text-white">
                        <h2 class="card-title mb-0">Староста</h2>
                    </div>
                    <div class="card-body">
                        <p class="card-text fs-4">@Model.GroupHead.Name</p>
                        <a asp-action="GroupHeadDetails" asp-route-id="@Model.GroupHead.StudentId" class="btn btn-primary">Открыть профиль</a>
                        <button class="btn btn-secondary" onclick="openAssignGroupHeadModal()">Изменить старосту</button>
                        <button class="btn btn-danger" onclick="removeGroupHead('@Model.GroupHead.StudentId')">
                            <i class="fas fa-times"></i> Удалить старосту
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning mb-4" role="alert">
                    Староста не назначен
                </div>
                @if (Model.Students.Any())
                {
                    <button class="btn btn-primary me-2" onclick="openAssignGroupHeadModal()">Назначить старосту</button>
                }
            }

            <button class="btn btn-success" onclick="openAddStudentModal()">
                <i class="fas fa-plus"></i> Добавить студента
            </button>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h2 class="card-title mb-0">Список студентов</h2>
                </div>
                <div class="card-body">
                    @if (Model.Students.Any())
                    {
                        <table class="table table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">ФИО</th>
                                    <th scope="col">ISU ID</th>
                                    <th scope="col">ФОТО</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var student in Model.Students)
                                {
                                    <tr>
                                        <td>@student.Name</td>
                                        <td>@student.UniversityStudentId</td>
                                        <td>
                                            <img src="https://isu.smtu.ru/images/isu_person/small/p@(student.UniversityStudentId).jpg" alt="Student Photo" style="max-width: 100px; height: auto;">
                                        </td>
                                        <td style="width: 1%; white-space: nowrap;">
                                            <button class="btn btn-danger" onclick="removeStudent('@student.StudentId')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-warning" role="alert">
                            Студенты не найдены
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Форма для фильтрации -->
    <form method="get" asp-action="GroupDetails" asp-route-id="@Model.GroupNumber" class="mb-4 needs-validation" novalidate>
        <div class="row">
            <div class="col-md-4 mb-3">
                <label for="academicYear" class="form-label">Учебный год</label>
                <input type="text" class="form-control" id="academicYear" name="academicYear" pattern="^\d{4}/\d{4}$" maxlength="9" placeholder="2024/2025" value="@ViewBag.AcademicYear" />
                <div class="invalid-feedback">Введите учебный год в формате гггг/гггг</div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="semester" class="form-label">Семестр</label>
                <input type="number" class="form-control" id="semester" name="semester" min="1" max="2" placeholder="1" value="@ViewBag.Semester" />
                <div class="invalid-feedback">Введите семестр (1 или 2)</div>
            </div>
            <div class="col-md-4 align-self-end mb-3">
                <button type="submit" class="btn btn-primary">Фильтровать</button>
            </div>
        </div>
    </form>

    <!-- Отчет по посещаемости -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h2 class="card-title mb-0">Отчет по посещаемости</h2>
                </div>
                <div class="card-body">
                    @if (Model.AttendanceReports.Any())
                    {
                        <table class="table table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">ФИО студента</th>
                                    <th scope="col">Название предмета</th>
                                    <th scope="col">Учебный год</th>
                                    <th scope="col">Семестр</th>
                                    <th scope="col">Процент посещаемости</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var report in Model.AttendanceReports)
                                {
                                    <tr>
                                        <td>@report.StudentName</td>
                                        <td>@report.SubjectName</td>
                                        <td>@report.AcademicYear</td>
                                        <td>@report.Semester</td>
                                        <td>@report.AttendancePercentage.ToString("F2")%</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-warning" role="alert">
                            Недостаточно данных для отчета по посещаемости
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

<!-- Модальное окно для назначения старосты -->
<div class="modal fade" id="assignGroupHeadModal" tabindex="-1" role="dialog" aria-labelledby="assignGroupHeadModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="assignGroupHeadForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignGroupHeadModalLabel">Назначить старосту группы</h5>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="studentId">Выберите студента:</label>
                        <select id="studentId" name="studentId" class="form-control">
                            @foreach (var student in Model.Students)
                            {
                                <option value="@student.StudentId">@student.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="assignGroupHead()">Назначить</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Модальное окно для добавления студента -->
<div class="modal fade" id="addStudentModal" data-group-number="@Model.GroupNumber" tabindex="-1" role="dialog" aria-labelledby="addStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="addStudentForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addStudentModalLabel">Добавить студента</h5>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="studentName">ФИО студента:</label>
                        <input type="text" id="studentName" name="studentName" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="universityStudentId">ISU ID студента:</label>
                        <input type="text" id="universityStudentId" name="universityStudentId" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="addStudent()">Добавить</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/GroupDetails.js"></script>

    <script>
        // Валидация формы
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
